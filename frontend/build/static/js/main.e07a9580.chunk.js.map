{"version":3,"sources":["utils/api.js","images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Profile.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/Login.js","components/Register.js","components/ProtectedRoute.js","components/PageNotFound.js","utils/auth.js","components/InfoToolTip.js","components/App.js","reportWebVitals.js","index.js"],"names":["api","baseUrl","headers","this","_baseUrl","_headers","res","ok","json","Promise","reject","status","fetch","authorization","then","_getResponseData","query","data","method","body","JSON","stringify","_id","id","action","addLike","deleteLike","localStorage","getItem","Header","userData","setLoggedIn","location","useLocation","useState","buttonName","buttonLink","info","setInfo","email","setEmail","useEffect","chunks","pathname","split","endPoint","length","handleLocation","className","href","target","src","logo","alt","to","onClick","removeItem","CurrentUserContext","React","createContext","Card","card","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","type","name","link","Profile","userAvatar","onEditAvatar","userName","onEditProfile","userDescription","onAddPlace","style","backgroundImage","Main","onCardClick","cards","avatar","about","map","Footer","PopupWithForm","props","isOpen","onMouseUp","onClickClose","onClose","onSubmit","formTitle","children","buttonTitle","ImagePopup","EditProfilePopup","onUpdateUser","submitButton","setName","setDescription","description","event","preventDefault","value","onChange","placeholder","minLength","maxLength","required","EditAvatarPopup","onUpdateAvatar","inputRef","useRef","current","ref","defaultValue","AddPlacePopup","inputTitle","setInputTitle","inputLink","setInputLink","Login","handleLogin","password","login","setLogin","handleChange","e","Register","handleRegister","registration","setRegistration","ProtectedRoute","Component","component","loggedIn","PageNotFound","BASE_URL","handleResponse","response","InfoToolTip","isConfirmed","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","popupSubmitSaveButton","setPopupSubmitSaveButton","popupSubmitCreateButton","setPopupSubmitCreateButton","setUserData","infoToolTipData","setInfoToolTipData","history","useHistory","tokenCheck","token","jwt","push","catch","error","showError","a","forEach","iter","console","log","changeLikeCardStatus","newCard","newCards","c","closeAllPopups","all","getUserInfo","getInitialCards","answer","closeViaClick","classList","contains","renderLoading","flag","popup","handleEscClose","key","window","addEventListener","removeEventListener","Provider","exact","path","deleteCard","refreshedCards","filter","everyCard","loginInfo","auth","setItem","err","addCard","finally","formData","editProfileInfo","editAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAwGaA,EAAM,I,WAtGf,cAAmC,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QAAW,oBAC9BC,KAAKC,SAAWH,EAChBE,KAAKE,SAAWH,E,oDAEpB,SAAiBI,GACb,OAAKA,EAAIC,GAGFD,EAAIE,OAFAC,QAAQC,OAAR,gDAA0BJ,EAAIK,W,6BAK7C,WACI,OAAOC,MAAMT,KAAKC,SAAW,SAAU,CACnCF,QAAS,CACLW,cAAeV,KAAKE,SAASQ,iBAGhCC,KAAKX,KAAKY,oB,yBAGnB,WACI,IAAMC,EAAQb,KAAKC,SAAW,YAC9B,OAAOQ,MAAMI,EAAO,CAChBd,QAAS,CACLW,cAAeV,KAAKE,SAASQ,iBAGhCC,KAAKX,KAAKY,oB,6BAGnB,SAAgBE,GACZ,OAAOL,MAAMT,KAAKC,SAAW,YAAa,CACtCc,OAAQ,QACRhB,QAAS,CACLW,cAAeV,KAAKE,SAASQ,cAC7B,eAAgB,oBAEpBM,KAAMC,KAAKC,UAAUJ,KAEpBH,KAAKX,KAAKY,oB,qBAGnB,SAAQE,GACJ,OAAOL,MAAMT,KAAKC,SAAW,SAAU,CACnCc,OAAQ,OACRhB,QAAS,CACLW,cAAeV,KAAKE,SAASQ,cAC7B,eAAgB,oBAEpBM,KAAMC,KAAKC,UAAUJ,KAEpBH,KAAKX,KAAKY,oB,wBAGnB,SAAWE,GACP,OAAOL,MAAMT,KAAKC,SAAW,mBAAoB,CAC7Cc,OAAQ,QACRhB,QAASC,KAAKE,SACdc,KAAMC,KAAKC,UAAUJ,KAEpBH,KAAKX,KAAKY,oB,qBAGnB,SAAQO,GACJ,OAAOV,MAAM,GAAD,OAAIT,KAAKC,SAAT,kBAA2BkB,EAA3B,UAAwC,CAChDJ,OAAQ,MACRhB,QAAS,CACLW,cAAeV,KAAKE,SAASQ,iBAGhCC,KAAKX,KAAKY,oB,wBAGnB,SAAWO,GACP,OAAOV,MAAM,GAAD,OAAIT,KAAKC,SAAT,kBAA2BkB,EAA3B,UAAwC,CAChDJ,OAAQ,SACRhB,QAAS,CACLW,cAAeV,KAAKE,SAASQ,iBAGhCC,KAAKX,KAAKY,oB,kCAGnB,SAAqBQ,EAAIC,GACrB,OAAe,IAAXA,EACOrB,KAAKsB,QAAQF,GAEbpB,KAAKuB,WAAWH,K,wBAI/B,SAAWD,GACP,OAAOV,MAAMT,KAAKC,SAAW,UAAYkB,EAAK,CAC1CJ,OAAQ,SACRhB,QAAS,CACLW,cAAeV,KAAKE,SAASQ,iBAGhCC,KAAKX,KAAKY,sB,KAIJ,CAAQ,CACvBd,QAAS,4CACTC,QAAS,CACLW,cAAc,UAAD,OAAYc,aAAaC,QAAQ,QAC9C,eAAgB,sBC5GT,MAA0B,iC,cC8D1BC,MAzDf,YAA4C,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YAClBC,EAAWC,cACjB,EAAwBC,mBAAS,CAC7BC,WAAY,GACZC,WAAY,KAFhB,mBAAOC,EAAP,KAAaC,EAAb,KAIA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAsCA,OAJAC,qBAAU,YAhCa,WACnB,IACMC,EADWV,EAASW,SACFC,MAAM,KACxBC,EAAWH,EAAOA,EAAOI,OAAS,GACvB,YAAbD,GACAP,EAAQ,CACJH,WAAY,qEACZC,WAAY,aAEhBI,EAAS,KACW,YAAbK,GACPP,EAAQ,CACJH,WAAY,iCACZC,WAAY,aAEhBI,EAAS,MAETF,EAAQ,CACJH,WAAY,iCACZC,WAAY,aAEhBI,EAASV,IAYbiB,KACD,CAACf,IAGA,yBAAQgB,UAAU,SAAlB,UACI,mBAAGC,KAAK,IAAIC,OAAO,QAAQF,UAAU,eAArC,SAAoD,qBAAKG,IAAKC,EAAMC,IAAI,6CACfL,UAAU,mBACnE,sBAAKA,UAAU,cAAf,UACI,mBAAGA,UAAU,eAAb,SAA6BT,IAC7B,cAAC,IAAD,CAAMe,GAAIjB,EAAKD,WAAYmB,QAjBpB,WACS,mCAApBlB,EAAKF,aACLR,aAAa6B,WAAW,OACxBzB,GAAY,KAeFiB,UAAU,iBADhB,SACkCX,EAAKF,oBCtD1CsB,EAAqBC,IAAMC,gBCqCzBC,MApCf,YAA4D,IAA5CC,EAA2C,EAA3CA,KAAMN,EAAqC,EAArCA,QAASO,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,aAEjCC,EAAcC,qBAAWR,GACzBS,EAAQL,EAAKM,MAAM7C,MAAQ0C,EAAY1C,IACvC8C,EAAyB,uBAAoBF,EAAQ,8BAAgC,8BACrFG,EAAUR,EAAKS,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAElD,MAAQ0C,EAAY1C,OACrDmD,EAAuB,qBAAkBJ,EAAU,oBAAsB,IAe/E,OACI,0BAASrB,UAAU,OAAnB,UACI,wBAAQ0B,KAAK,SAAS1B,UAAWoB,EAA2Bb,QAN1C,WACtBQ,EAAaF,MAMT,qBAAKb,UAAU,cAAcK,IAAKQ,EAAKc,KAAMxB,IAAKU,EAAKe,KAAMrB,QAf7C,WACpBA,EAAQM,MAeJ,sBAAKb,UAAU,cAAf,UACI,oBAAIA,UAAU,cAAd,SAA6Ba,EAAKc,OAClC,sBAAK3B,UAAU,iBAAf,UACI,wBAAQ0B,KAAK,SAAS1B,UAAWyB,EAAyBlB,QAflD,WACpBO,EAAWD,MAeC,mBAAGb,UAAU,kBAAb,SAAgCa,EAAKS,MAAMxB,mBCFhD+B,MA9Bf,YACoE,IADlDC,EACiD,EADjDA,WAAYC,EACqC,EADrCA,aAAcC,EACuB,EADvBA,SACvBC,EAA8C,EAA9CA,cAAeC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,WACjD,OACI,0BAASnC,UAAU,UAAnB,UACI,sBAAKA,UAAU,eAAf,UACI,qBACIA,UAAU,kBACVoC,MAAO,CAAEC,gBAAgB,OAAD,OAASP,IAFrC,SAGI,wBACIJ,KAAK,SACL1B,UAAU,0BACVO,QAASwB,MAKjB,sBAAK/B,UAAU,gBAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,oBAAIA,UAAU,iBAAd,SAAgCgC,IAChC,wBAAQN,KAAK,SAAS1B,UAAU,gBAAgBzB,GAAG,OAAOgC,QAAS0B,OAEvE,mBAAGjC,UAAU,gBAAb,SAA8BkC,UAItC,wBAAQR,KAAK,SAAS1B,UAAU,eAAezB,GAAG,MAAMgC,QAAS4B,QCU9DG,MA9Bf,YAA0G,IAA1FH,EAAyF,EAAzFA,WAAYJ,EAA6E,EAA7EA,aAAcE,EAA+D,EAA/DA,cAAeM,EAAgD,EAAhDA,YAAaC,EAAmC,EAAnCA,MAAOzB,EAA4B,EAA5BA,aAAcD,EAAc,EAAdA,WACjFE,EAAcC,qBAAWR,GAI/B,OACI,qCAEI,cAAC,EAAD,CACIqB,WAAYd,EAAYyB,OACxBV,aAAcA,EACdC,SAAUhB,EAAYW,KACtBM,cAAeA,EACfC,gBAAiBlB,EAAY0B,MAC7BP,WAAYA,IAKhB,yBAASnC,UAAU,QAAnB,SAEQwC,EAAMG,KAAI,SAAC9B,GAAD,OACN,cAAC,EAAD,CAAqBA,KAAMA,EAAMN,QAASgC,EAAazB,WAAYA,EAAYC,aAAcA,GAAlFF,EAAKvC,cCfzBsE,MARf,WACI,OACI,yBAAS5C,UAAU,SAAnB,SACI,mBAAGA,UAAU,oBAAb,0CCWG6C,MAlBf,SAAuBC,GACnB,OACI,yBACI9C,UAAW8C,EAAMC,OAAN,2BAAmCD,EAAMnB,KAAzC,4CAAmFmB,EAAMnB,MACpGqB,UAAWF,EAAMG,aAFrB,SAII,sBAAKjD,UAAU,gBAAf,UACI,wBAAQA,UAAU,eAAe0B,KAAK,SAASnB,QAASuC,EAAMI,UAC9D,uBAAMlD,UAAU,OAAO2B,KAAI,oBAAemB,EAAMnB,MAAQwB,SAAUL,EAAMK,SAAxE,UACI,oBAAInD,UAAU,cAAd,SAA6B8C,EAAMM,YAClCN,EAAMO,SACP,wBAAQrD,UAAU,eAAe0B,KAAK,SAAtC,SAAgDoB,EAAMQ,uBCO3DC,MAlBf,YAAoD,IAA/B1C,EAA8B,EAA9BA,KAAMqC,EAAwB,EAAxBA,QAASD,EAAe,EAAfA,aAChC,OACI,yBACIjD,UAAS,+CAAkD,MAARa,EAAe,eAAiB,IACnFmC,UAAWC,EAFf,SAII,sBAAKjD,UAAU,mBAAf,UACI,yBAAQA,UAAU,gBAAlB,UAEI,qBAAKG,IAAG,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAMe,KAAMvB,IAAI,+DAAaL,UAAU,iBACjD,6BAAYA,UAAU,iBAAtB,iBAAwCa,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAMc,KAA9C,UAEJ,wBAAQ3B,UAAU,eAAe0B,KAAK,SAASnB,QAAS2C,UC8CzDM,MArDf,YAA0F,IAA9DT,EAA6D,EAA7DA,OAAQE,EAAqD,EAArDA,aAAcC,EAAuC,EAAvCA,QAASO,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,aAC/D1C,EAAcC,qBAAWR,GAE/BhB,qBAAU,WACNkE,EAAQ3C,EAAYW,MACpBiC,EAAe5C,EAAY0B,SAC5B,CAAC1B,EAAa+B,IAEjB,MAAwB7D,mBAAS,IAAjC,mBAAOyC,EAAP,KAAagC,EAAb,KACA,EAAsCzE,mBAAS,IAA/C,mBAAO2E,EAAP,KAAoBD,EAApB,KAmBA,OACI,eAAC,EAAD,CACIjC,KAAM,OACN2B,YAAaI,EACbN,UAAW,4HACXD,SAdR,SAAsBW,GAClBA,EAAMC,iBAENN,EAAa,CACT9B,KAAMA,EACNe,MAAOmB,KAUPd,OAAQA,EACRG,QAASA,EACTD,aAAcA,EAPlB,UAUI,uBAAOjD,UAAU,+BAA+BzB,GAAG,OAAOmD,KAAK,OAC3DC,KAAK,OAAOqC,MAAOrC,GAAQ,GAAIsC,SA7B3C,SAA0BH,GACtBH,EAAQG,EAAM5D,OAAO8D,QA6BbE,YAAY,qBAAMC,UAAU,IAAIC,UAAU,KAAKC,UAAQ,IAC3D,sBAAMrE,UAAU,oBAAoBzB,GAAG,eAEvC,uBAAOyB,UAAU,gCAAgCzB,GAAG,QAAQmD,KAAK,OAC1DC,KAAK,QAAQqC,MAAOH,GAAe,GAAII,SA9BtD,SAAiCH,GAC7BF,EAAeE,EAAM5D,OAAO8D,QA8BjBE,YAAY,kCAASC,UAAU,IAAIC,UAAU,MAAMC,UAAQ,IAClE,sBAAMrE,UAAU,oBAAoBzB,GAAG,oBChBpC+F,MAjCf,YAA2F,IAAhEvB,EAA+D,EAA/DA,OAAQG,EAAuD,EAAvDA,QAASD,EAA8C,EAA9CA,aAAcsB,EAAgC,EAAhCA,eAAgBb,EAAgB,EAAhBA,aAChEc,EAAWC,mBAWjB,OACI,eAAC,EAAD,CACI9C,KAAM,SACN2B,YAAaI,EACbN,UAAW,wFACXL,OAAQA,EACRG,QAASA,EACTD,aAAcA,EACdE,SAjBR,SAAsBW,GAClBA,EAAMC,iBAENQ,EAAe,CACX9B,OAAQ+B,EAASE,QAAQV,QAE7BQ,EAASE,QAAQV,MAAQ,IAIzB,UAUI,uBAAOhE,UAAU,+BAA+BzB,GAAG,OAC5CoG,IAAKH,EACL9C,KAAK,MAAMC,KAAK,SAASiD,aAAa,GACtCV,YAAY,6HAAyBG,UAAQ,IACpD,sBAAMrE,UAAU,oBAAoBzB,GAAG,mBCyBpCsG,MAnDf,YAAqF,IAA5D9B,EAA2D,EAA3DA,OAAQE,EAAmD,EAAnDA,aAAcC,EAAqC,EAArCA,QAASf,EAA4B,EAA5BA,WAAYuB,EAAgB,EAAhBA,aAEhE,EAAoCxE,mBAAS,CAAC8E,MAAO,KAArD,mBAAOc,EAAP,KAAmBC,EAAnB,KACA,EAAkC7F,mBAAS,CAAC8E,MAAO,KAAnD,mBAAOgB,EAAP,KAAkBC,EAAlB,KAqBA,OACI,eAAC,EAAD,CACItD,KAAM,MACN2B,YAAaI,EACbN,UAAW,gEACXL,OAAQA,EACRG,QAASA,EACTD,aAAcA,EACdE,SA3BR,SAA8BW,GAC1BA,EAAMC,iBAEN5B,EAAW,CACPR,KAAMmD,EAAWd,MACjBpC,KAAMoD,EAAUhB,QAEpBe,EAAc,CAACf,MAAO,KACtBiB,EAAa,CAACjB,MAAO,MAYrB,UAUI,uBAAOhE,UAAU,gCAAgCzB,GAAG,cAC7CmD,KAAK,OAAOC,KAAK,OAAOqC,MAAOc,EAAWd,MAC1CC,SArBgB,SAACH,GAC5BiB,EAAc,CAAEf,MAAOF,EAAM5D,OAAO8D,SAqBzBE,YAAY,mDAAWC,UAAU,IAAIC,UAAU,KAAKC,UAAQ,IACnE,sBAAMrE,UAAU,oBAAoBzB,GAAG,sBAEvC,uBAAOyB,UAAU,+BAA+BzB,GAAG,aAC5CmD,KAAK,MAAMC,KAAK,OAAOqC,MAAOgB,EAAUhB,MACxCC,SAvBe,SAACH,GAC3BmB,EAAa,CAAEjB,MAAOF,EAAM5D,OAAO8D,SAuBxBE,YAAY,qGAAqBG,UAAQ,IAChD,sBAAMrE,UAAU,oBAAoBzB,GAAG,yB,eCdpC2G,EAjCD,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACb,EAA0BjG,mBAAS,CAC/BK,MAAO,GACP6F,SAAU,KAFd,mBAAOC,EAAP,KAAcC,EAAd,KAKMC,EAAe,SAACC,GAClB,MAAsBA,EAAEtF,OAAjByB,EAAP,EAAOA,KAAMqC,EAAb,EAAaA,MACbsB,EAAS,2BACFD,GADC,kBAEH1D,EAAOqC,MAWhB,OACI,uBAAMb,SARW,SAACqC,GAClBA,EAAEzB,iBAGFoB,EAAYE,IAIkBrF,UAAU,gBAAxC,UACI,oBAAIA,UAAU,uBAAd,sCACA,uBAAOA,UAAU,uBAAuB2B,KAAK,QAAQsC,SAAUsB,EAAcvB,MAAOqB,EAAM9F,MAAOmC,KAAK,QAAQwC,YAAY,QAAQC,UAAU,IACrIE,UAAQ,IACf,uBAAOrE,UAAU,uBAAuB2B,KAAK,WAAWsC,SAAUsB,EAAcvB,MAAOqB,EAAMD,SAAU1D,KAAK,WAAWwC,YAAY,uCAC5HC,UAAU,IAAIE,UAAQ,IAC7B,wBAAQrE,UAAU,wBAAwB0B,KAAK,SAA/C,gDCSG+D,EApCE,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAChB,EAAwCxG,mBAAS,CAC7CK,MAAO,GACP6F,SAAU,KAFd,mBAAOO,EAAP,KAAqBC,EAArB,KAKML,EAAe,SAACC,GAClB,MAAsBA,EAAEtF,OAAjByB,EAAP,EAAOA,KAAMqC,EAAb,EAAaA,MACb4B,EAAgB,2BACTD,GADQ,kBAEVhE,EAAOqC,MAWhB,OACI,uBAAMb,SARW,SAACqC,GAClBA,EAAEzB,iBAGF2B,EAAeC,IAIe3F,UAAU,gBAAxC,UACI,oBAAIA,UAAU,uBAAd,gFACA,uBAAOA,UAAU,uBAAuBiE,SAAUsB,EAAcvB,MAAO2B,EAAapG,MAAOoC,KAAK,QAAQD,KAAK,QAAQwC,YAAY,QAC1HC,UAAU,IAAIE,UAAQ,IAC7B,uBAAOrE,UAAU,uBAAuBiE,SAAUsB,EAAcvB,MAAO2B,EAAaP,SAAUzD,KAAK,WAAWD,KAAK,WAAWwC,YAAY,uCACnIC,UAAU,IAAIE,UAAQ,IAC7B,wBAAQrE,UAAU,wBAAwB0B,KAAK,SAA/C,0HACA,oBAAG1B,UAAU,sBAAb,kIAC0B,cAAC,IAAD,CAAMM,GAAG,WAAWN,UAAU,sBAA9B,mD,QCpBvB6F,EAVQ,SAAC,GAAsC,IAA1BC,EAAyB,EAApCC,UAAyBjD,EAAW,6BACzD,OACI,cAAC,IAAD,UAEQ,kBAAyB,IAAnBA,EAAMkD,SAAoB,cAACF,EAAD,eAAehD,IAAY,cAAC,IAAD,CAAUxC,GAAG,kBCDzE2F,EANM,WACjB,OACI,oDCDKC,EAAW,4CAElBC,EAAiB,SAAAC,GAAQ,OAAIA,EAAS7I,GAAK6I,EAAS5I,OAASC,QAAQC,OAAR,gDAA0B0I,EAASzI,UCavF0I,EAhBK,SAAC,GAAoD,IAAlDtD,EAAiD,EAAjDA,OAAQuD,EAAyC,EAAzCA,YAAarD,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,QACtD,OACI,yBAASlD,UAAS,kCAA6B+C,EAAS,eAAiB,IAChEC,UAAWC,EADpB,SAEI,qBAAKjD,UAAU,gBAAf,SACI,uBAAMA,UAAU,OAAhB,UACI,qBAAKA,UAAS,yBAAoBsG,EAAc,sBAAwB,wBACxE,mBAAGtG,UAAU,iCAAb,SAA+CsG,EAAc,wKAAmC,wMAChG,wBAAQtG,UAAU,eAAe0B,KAAK,SAASnB,QAAS2C,YCsU7DqD,MA1Tf,WACI,MAA0DrH,oBAAS,GAAnE,mBAAOsH,EAAP,KAA8BC,EAA9B,KACA,EAAsDvH,oBAAS,GAA/D,mBAAOwH,EAAP,KAA4BC,EAA5B,KACA,EAA4DzH,oBAAS,GAArE,mBAAO0H,EAAP,KAA+BC,EAA/B,KACA,EAAwC3H,mBAAS,MAAjD,mBAAO4H,EAAP,KAAqBC,EAArB,KACA,EAAsC7H,mBAAS,IAA/C,mBAAO8B,EAAP,KAAoBgG,EAApB,KACA,EAA0B9H,mBAAS,IAAnC,mBAAOsD,EAAP,KAAcyE,EAAd,KACA,EAA0D/H,mBAAS,0DAAnE,mBAAOgI,EAAP,KAA8BC,EAA9B,KACA,EAA8DjI,mBAAS,8CAAvE,mBAAOkI,GAAP,KAAgCC,GAAhC,KACA,GAAgCnI,oBAAS,GAAzC,qBAAO8G,GAAP,MAAiBjH,GAAjB,MACA,GAAgCG,mBAAS,IAAzC,qBAAOJ,GAAP,MAAiBwI,GAAjB,MACA,GAA8CpI,mBAAS,CACnDvB,QAAQ,EACRoF,QAAQ,IAFZ,qBAAOwE,GAAP,MAAwBC,GAAxB,MAMMC,GAAUC,cAgBhB,SAASC,KACL,IFxBmBC,EEwBbC,EAAMlJ,aAAaC,QAAQ,OAC7BiJ,IFzBeD,EE0BCC,EFzBjBjK,MAAM,GAAD,OAAIsI,EAAJ,aAAyB,CACjChI,OAAQ,MACRhB,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2B0K,MAG9B9J,KAAKqI,IEkBmBrI,MAAK,SAACR,GACnBA,IACAyB,IAAY,GACZuI,GAAYhK,EAAIW,KAAKsB,OACrBkI,GAAQK,KAAK,SAGhBC,OAAM,SAAAC,GAAK,OAAIC,GAAUD,MA3C3B,8CA2FX,WAA8BnH,GAA9B,mBAAAqH,EAAA,sEAEc7G,EAAUR,EAAKS,MAAM6G,SAAQ,SAAC5J,EAAI6J,GACpC,OAAI7J,IAAOyC,EAAY1C,KAGnB8J,IAASvH,EAAKS,MAAMxB,OAAS,QAAjC,KAIJuI,QAAQC,IAAIjH,GAVpB,SAW8BrE,EAAIuL,qBAAqB1H,EAAKvC,KAAM+C,GAXlE,OAWcmH,EAXd,OAYcC,EAAWjG,EAAMG,KAAI,SAAC+F,GAAD,OAAOA,EAAEpK,MAAQuC,EAAKvC,IAAMkK,EAAUE,KACjEzB,EAASwB,GAbjB,kDAeQR,GAAU,EAAD,IAfjB,2DA3FW,sBAsIX,SAASU,KACLhC,GAAuB,GACvBF,GAAyB,GACzBI,GAA0B,GAE1BE,EAAgB,MAChBS,IAAmB,GAxHvB/H,qBAAU,WACNkI,KACAlK,QAAQmL,IAAI,CAAC5L,EAAI6L,cAAe7L,EAAI8L,oBAC/BhL,MAAK,SAAAiL,GACF/B,EAAe+B,EAAO,IACtB9B,EAAS8B,EAAO,OAEnBhB,OAAM,SAAAC,GACHC,GAAUD,GACVhB,EAAe,SAExB,IAiHH,IAAMgC,GAAgB,SAACxD,GACfA,EAAEtF,OAAO+I,UAAUC,SAAS,iBAC5BP,MAmBR,SAASQ,GAActF,GACnB,IAAQuF,EAAgBvF,EAAhBuF,KACM,YADUvF,EAAVwF,MAEHlC,EAAPiC,EAAgC,kEAA4C,0DAErE/B,GAAP+B,EAAkC,sDAA4C,8CAItF,SAASnB,GAAUD,GACfK,QAAQC,IAAI,UAAYN,GA4C5B,OAnEAvI,qBAAU,WACN,IAAM6J,EAAiB,SAAC9D,GACN,WAAVA,EAAE+D,KACFZ,MAKR,OADAa,OAAOC,iBAAiB,UAAWH,GAC5B,WACHE,OAAOE,oBAAoB,UAAWJ,OA2D1C,cAAC7I,EAAmBkJ,SAApB,CAA6B3F,MAAOhD,EAApC,SAEI,qBAAKhB,UAAU,YAAf,SAEI,sBAAKA,UAAU,OAAf,UAEI,cAAC,EAAD,CAAQlB,SAAUA,GAAUC,YAAaA,KAEzC,eAAC,IAAD,WACI,cAAC,EAAD,CACI6K,OAAK,EAACC,KAAK,IACX7D,SAAUA,GACVD,UAAWzD,EACXL,cAhHxB,WACI4E,GAA2BD,IAgHPzE,WAzGxB,WACIwE,GAAwBD,IAyGJ3E,aA9GxB,WACI0E,GAA0BD,IA8GNjE,YAAawE,EACbvE,MAAOA,EACP1B,WA9Ob,6CA+OaC,aAjIxB,SAA0BF,GACtB7D,EAAI8M,WAAWjJ,EAAKvC,KACfR,MAAK,SAAAG,GACF,IAAM8L,EAAiBvH,EAAMwH,QAAO,SAAAC,GAAS,OAAIA,EAAU3L,MAAQuC,EAAKvC,OACxE2I,EAAS8C,GACT1B,QAAQC,IAAIrK,MAEf8J,MAAME,OA4HK,cAAC,IAAD,CAAO4B,KAAK,WAAZ,SACI,cAAC,EAAD,CAAO1E,YA7K/B,SAAqBE,IFvEJ,SAAC6E,GAClB,IAAO3K,EAAmB2K,EAAnB3K,MAAO6F,EAAY8E,EAAZ9E,SACd,OAAOxH,MAAM,GAAD,OAAIsI,EAAJ,WAAuB,CAC/BhI,OAAQ,OACRhB,QAAS,CACL,eAAgB,oBAEpBiB,KAAMC,KAAKC,UAAU,CAAC,SAAY+G,EAAU,MAAS7F,MAEpDzB,KAAKqI,IE+DNgE,CAAW9E,GACNvH,MAAK,SAAAG,GACFoK,QAAQC,IAAIrK,GACRA,EAAK2J,QACLjJ,aAAayL,QAAQ,MAAOnM,EAAK2J,OACjCN,GAAYjC,EAAM9F,OAClBR,IAAY,GACZ0I,GAAQK,KAAK,SAGpBC,OAAM,SAAAsC,GACHhC,QAAQC,IAAI+B,GACZ7C,GAAmB,CACf7J,QAAQ,EACRoF,QAAQ,QA8JiC4E,WAAYA,OAEjD,cAAC,IAAD,CAAOkC,KAAK,WAAZ,SACI,cAAC,EAAD,CAAUnE,eAtMlC,SAAwBC,IF9DJ,SAACA,GACrB,IAAOpG,EAAmBoG,EAAnBpG,MAAO6F,EAAYO,EAAZP,SACd,OAAOxH,MAAM,GAAD,OAAIsI,EAAJ,WAAuB,CAC/BhI,OAAQ,OACRhB,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBiB,KAAMC,KAAKC,UAAU,CAAC,SAAY+G,EAAU,MAAS7F,MAEpDzB,KAAKqI,IEsDNgE,CAAcxE,GACT7H,MAAK,SAAAG,GACFoK,QAAQC,IAAIrK,GACZuJ,GAAmB,CACf7J,QAAQ,EACRoF,QAAQ,IAEZ0E,GAAQK,KAAK,eAIhBC,OAAM,SAAAsC,GACHhC,QAAQC,IAAI+B,GACZ7C,GAAmB,CACf7J,QAAQ,EACRoF,QAAQ,YAuLJ,cAAC,EAAD,CACI8G,KAAK,IACL9D,UAAWE,OAKnB,cAAC,EAAD,CACIlD,OAAQwE,GAAgBxE,OACxBuD,YAAaiB,GAAgB5J,OAC7BuF,QAASyF,GACT1F,aAAc+F,KAGlB,cAAC,EAAD,CACIjG,OAAQ2D,EACRxD,QAASyF,GACT1F,aAAc+F,GACd7G,WA7DpB,SAAwBtB,GACpBsI,GAAc,CAAEC,MAAM,EAAMC,MAAO,aACnChB,QAAQC,IAAIzH,GACZ7D,EAAIsN,QAAQzJ,GACP/C,MAAK,SAAA0K,GAEFvB,EAAS,CAACuB,GAAF,mBAAchG,KACtBmG,QAEHZ,MAAME,IACNsC,SAAQ,WACLpB,GAAc,CAAEC,MAAM,EAAOC,MAAO,iBAmD5B3F,aAAc0D,KAKlB,cAAC,EAAD,CACIrE,OAAQ6D,EACR1D,QAASyF,GACT1F,aAAc+F,GACdvF,aAjGpB,SAA0B+G,GACtBrB,GAAc,CAACC,MAAM,EAAMC,MAAO,YAClCrM,EAAIyN,gBAAgBD,GACf1M,MAAK,SAAAsI,GACFY,EAAeZ,GACfuC,QAEHZ,MAAME,IACNsC,SAAQ,WACLpB,GAAc,CAACC,MAAM,EAAOC,MAAO,gBAyF3B3F,aAAcwD,IAKlB,cAAC,EAAD,CACInE,OAAQyD,EACRvD,aAAc+F,GACd9F,QAASyF,GACTpE,eA9FpB,SAA4B9B,GACxB0G,GAAc,CAAEC,MAAM,EAAMC,MAAO,WACnCrM,EAAI0N,WAAWjI,GACV3E,MAAK,SAAAsI,GACFY,EAAeZ,GACfuC,QAEHZ,MAAME,IACNsC,SAAQ,WACLpB,GAAc,CAAEC,MAAM,EAAOC,MAAO,eAsF5B3F,aAAc0D,KAKlB,cAAC,EAAD,CACIvG,KAAMiG,EACN5D,QAASyF,GACT1F,aAAc+F,KAKlB,cAAC,EAAD,CACIrH,KAAM,SACN2B,YAAa,eACbF,UAAW,2DACXL,QAAQ,IAIZ,cAAC,EAAD,YC3TL4H,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/M,MAAK,YAAkD,IAA/CgN,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAAC,EAAD,QAIRC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e07a9580.chunk.js","sourcesContent":["\nclass Api {\n    constructor({ baseUrl, headers }) {\n        this._baseUrl = baseUrl;\n        this._headers = headers;\n    }\n    _getResponseData(res) {\n        if (!res.ok) {\n            return Promise.reject(`Ошибка: ${res.status}`);\n        }\n        return res.json();\n    }\n\n    getInitialCards() {\n        return fetch(this._baseUrl + '/cards', {\n            headers: {\n                authorization: this._headers.authorization\n            }\n        })\n            .then(this._getResponseData);\n    }\n\n    getUserInfo() {\n        const query = this._baseUrl + '/users/me';\n        return fetch(query, {\n            headers: {\n                authorization: this._headers.authorization\n            }\n        })\n            .then(this._getResponseData);\n    }\n\n    editProfileInfo(data) {\n        return fetch(this._baseUrl + '/users/me', {\n            method: 'PATCH',\n            headers: {\n                authorization: this._headers.authorization,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n            })\n            .then(this._getResponseData);\n    }\n\n    addCard(data) {\n        return fetch(this._baseUrl + '/cards', {\n            method: 'POST',\n            headers: {\n                authorization: this._headers.authorization,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n            })\n            .then(this._getResponseData);\n    }\n\n    editAvatar(data) {\n        return fetch(this._baseUrl + '/users/me/avatar', {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify(data)\n        })\n            .then(this._getResponseData);\n    }\n\n    addLike(_id) {\n        return fetch(`${this._baseUrl}/cards/${_id}/likes`, {\n            method: 'PUT',\n            headers: {\n                authorization: this._headers.authorization\n            },\n        })\n            .then(this._getResponseData);\n    }\n\n    deleteLike(_id) {\n        return fetch(`${this._baseUrl}/cards/${_id}/likes`, {\n            method: 'DELETE',\n            headers: {\n                authorization: this._headers.authorization\n            },\n        })\n            .then(this._getResponseData);\n    }\n\n    changeLikeCardStatus(id, action) {\n        if (action === true) {\n            return this.addLike(id);\n        } else {\n            return this.deleteLike(id);\n        }\n    }\n\n    deleteCard(_id) {\n        return fetch(this._baseUrl + '/cards/' + _id, {\n            method: 'DELETE',\n            headers: {\n                authorization: this._headers.authorization\n            },\n        })\n            .then(this._getResponseData);\n    }\n}\n\nexport const api = new Api({\n    baseUrl: 'https://api.nastish.nomoredomains.monster',\n    headers: {\n        authorization: `Bearer ${localStorage.getItem('jwt')}`,\n        'Content-Type': 'application/json'\n    }\n});\n\n\n","export default __webpack_public_path__ + \"static/media/logo.03b78ada.svg\";","import logo from \"../images/logo.svg\";\nimport { useLocation, Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react'\n\n\nfunction Header({ userData, setLoggedIn }) {\n    const location = useLocation();\n    const [info, setInfo] = useState({\n        buttonName: '',\n        buttonLink: ''\n    })\n    const [email, setEmail] = useState('');\n\n    const handleLocation = () => {\n        const pathName = location.pathname;\n        const chunks = pathName.split('/');\n        const endPoint = chunks[chunks.length - 1];\n        if (endPoint === 'sign-in') {\n            setInfo({\n                buttonName: 'Регистрация',\n                buttonLink: '/sign-up'\n            })\n            setEmail('')\n        } else if (endPoint === 'sign-up') {\n            setInfo({\n                buttonName: 'Войти',\n                buttonLink: '/sign-in'\n            })\n            setEmail('')\n        } else {\n            setInfo({\n                buttonName: 'Выйти',\n                buttonLink: '/sign-in'\n            })\n            setEmail(userData);\n        }\n    }\n\n    const handleExit = () => {\n        if (info.buttonName === 'Выйти') {\n            localStorage.removeItem('jwt');\n            setLoggedIn(false);\n        }\n    }\n\n    useEffect(() => {\n        handleLocation();\n    }, [location])\n\n    return (\n        <header className=\"header\">\n            <a href=\"#\" target=\"_self\" className=\"header__link\"><img src={logo} alt=\"Логотип\"\n                                                                     className=\"header__logo\"/></a>\n            <div className=\"header__nav\">\n                <p className=\"header__mail\">{email}</p>\n                <Link to={info.buttonLink} onClick={handleExit}\n                      className=\"header__action\">{info.buttonName}</Link>\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react'\n\nexport const CurrentUserContext = React.createContext();","import { useContext } from 'react';\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction Card({ card, onClick, onCardLike, onCardDelete }) {\n\n    const currentUser = useContext(CurrentUserContext);\n    const isOwn = card.owner._id === currentUser._id;\n    const cardDeleteButtonClassName = (`card__delete ${isOwn ? 'card__delete-button_visible' : 'card__delete-button_hidden'}`);\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    const cardLikeButtonClassName = (`card__like ${isLiked ? 'card__like_active' : ''}`);\n\n\n    const handleCardClick = () => {\n        onClick(card);\n    }\n\n    const handleLikeClick = () => {\n        onCardLike(card);\n    }\n\n    const handleDeleteClick = () => {\n        onCardDelete(card);\n    }\n\n    return (\n        <article className=\"card\">\n            <button type=\"button\" className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\n            <img className=\"card__photo\" alt={card.name} src={card.link} onClick={handleCardClick}/>\n            <div className=\"card__lists\">\n                <h2 className=\"card__title\">{card.name}</h2>\n                <div className=\"card__like-box\">\n                    <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\n                    <p className=\"card__like-numb\">{card.likes.length}</p>\n                </div>\n            </div>\n        </article>\n    )\n}\n\nexport default Card;\n","function Profile({userAvatar, onEditAvatar, userName,\n                     onEditProfile, userDescription, onAddPlace }) {\n    return (\n        <section className=\"profile\">\n            <div className=\"profile__box\">\n                <div\n                    className=\"profile__avatar\"\n                    style={{ backgroundImage: `url(${userAvatar}`}}>\n                    <button\n                        type=\"button\"\n                        className=\"profile__avatar-overlay\"\n                        onClick={onEditAvatar}>\n                    </button>\n                </div>\n\n\n                <div className=\"profile__info\">\n                    <div className=\"profile__header\">\n                        <h1 className=\"profile__title\">{userName}</h1>\n                        <button type=\"button\" className=\"profile__edit\" id=\"edit\" onClick={onEditProfile}></button>\n                    </div>\n                    <p className=\"profile__text\">{userDescription}</p>\n                </div>\n            </div>\n\n            <button type=\"button\" className=\"profile__add\" id=\"add\" onClick={onAddPlace}></button>\n        </section>\n    )\n}\n\nexport default Profile;","import { useContext } from \"react\";\nimport Card from './Card';\nimport Profile from './Profile';\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction Main({ onAddPlace, onEditAvatar, onEditProfile, onCardClick, cards, onCardDelete, onCardLike }) {\n    const currentUser = useContext(CurrentUserContext);\n\n\n\n    return (\n        <>\n            {/*секция с профилем*/}\n            <Profile\n                userAvatar={currentUser.avatar}\n                onEditAvatar={onEditAvatar}\n                userName={currentUser.name}\n                onEditProfile={onEditProfile}\n                userDescription={currentUser.about}\n                onAddPlace={onAddPlace}\n            />\n\n\n            {/*секция с основным массивом карточек */}\n            <section className=\"cards\">\n                {\n                    cards.map((card) => (\n                        <Card key={card._id} card={card} onClick={onCardClick} onCardLike={onCardLike} onCardDelete={onCardDelete}/>\n                    ))\n                }\n            </section>\n        </>\n    )\n}\n\nexport default Main;\n","{/*футер */}\n\n\n\nfunction Footer() {\n    return (\n        <section className=\"footer\">\n            <p className=\"footer__copyright\">&copy;&#160;2021 Mesto Russia</p>\n        </section>\n    )\n}\n\nexport default Footer;","function PopupWithForm(props) {\n    return (\n        <article\n            className={props.isOpen ? `popup popup_type_${props.name} popup_opened` : `popup popup_type_${props.name}`}\n            onMouseUp={props.onClickClose}\n        >\n            <div className=\"popup__window\">\n                <button className=\"popup__close\" type=\"button\" onClick={props.onClose}></button>\n                <form className=\"form\" name={`popup-form${props.name}`} onSubmit={props.onSubmit}>\n                    <h2 className=\"form__title\">{props.formTitle}</h2>\n                    {props.children}\n                    <button className=\"form__button\" type=\"submit\">{props.buttonTitle}</button>\n                </form>\n            </div>\n        </article>\n    )\n}\n\nexport default PopupWithForm;\n","function ImagePopup({card, onClose, onClickClose}) {\n    return (\n        <article\n            className={`popup popup_type_image popup_opacity ${card != null ? 'popup_opened' : ''}`}\n            onMouseUp={onClickClose}\n        >\n            <div className=\"popup__container\">\n                <figure className=\"popup__figure\">\n                    {/*<img src={card != null ? card.link : \"#\"} alt=\"фотография\" className=\"popup__photo\"/>*/}\n                    <img src={card?.link} alt=\"фотография\" className=\"popup__photo\"/>\n                    <figcaption className=\"popup__caption\">{card?.name} </figcaption>\n                </figure>\n                <button className=\"popup__close\" type=\"button\" onClick={onClose}></button>\n            </div>\n        </article>\n    );\n}\n\nexport default ImagePopup;","import PopupWithForm from \"./PopupWithForm\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\n\nfunction EditProfilePopup({ isOpen, onClickClose, onClose, onUpdateUser, submitButton }) {\n    const currentUser = useContext(CurrentUserContext);\n\n    useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser, isOpen]);\n\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n\n    function handleNameChange(event) {\n        setName(event.target.value);\n    }\n\n    function handleDescriptionChange(event) {\n        setDescription(event.target.value);\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        onUpdateUser({\n            name: name,\n            about: description,\n        });\n    }\n\n    return (\n        <PopupWithForm\n            name={\"edit\"}\n            buttonTitle={submitButton}\n            formTitle={\"Редактировать профиль\"}\n            onSubmit={handleSubmit}\n            isOpen={isOpen}\n            onClose={onClose}\n            onClickClose={onClickClose}\n        >\n\n            <input className=\"form__input form__input_name\" id=\"name\" type=\"text\"\n                name=\"name\" value={name || ''} onChange={handleNameChange}\n                placeholder=\"Имя\" minLength=\"2\" maxLength=\"40\" required/>\n            <span className=\"form__input-error\" id=\"name-error\"></span>\n\n            <input className=\"form__input form__input_about\" id=\"about\" type=\"text\"\n                   name=\"about\" value={description || ''} onChange={handleDescriptionChange}\n                   placeholder=\"О себе\" minLength=\"2\" maxLength=\"200\" required/>\n            <span className=\"form__input-error\" id=\"about-error\"></span>\n\n        </PopupWithForm>\n    );\n}\n\nexport default EditProfilePopup;","import PopupWithForm from \"./PopupWithForm\";\nimport { useRef } from \"react\";\n\nfunction EditAvatarPopup({ isOpen, onClose, onClickClose, onUpdateAvatar, submitButton }) {\n    const inputRef = useRef();\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        onUpdateAvatar({\n            avatar: inputRef.current.value\n        });\n        inputRef.current.value = '';\n    }\n\n    return (\n        <PopupWithForm\n            name={\"avatar\"}\n            buttonTitle={submitButton}\n            formTitle={\"Обновить аватар\"}\n            isOpen={isOpen}\n            onClose={onClose}\n            onClickClose={onClickClose}\n            onSubmit={handleSubmit}\n        >\n\n            <input className=\"form__input form__input_link\" id=\"link\"\n                   ref={inputRef}\n                   type=\"url\" name=\"avatar\" defaultValue=\"\"\n                   placeholder=\"Ссылка на фототографию\" required/>\n            <span className=\"form__input-error\" id=\"link-error\"></span>\n\n        </PopupWithForm>\n    );\n}\n\nexport default EditAvatarPopup;","import PopupWithForm from \"./PopupWithForm\";\nimport { useState } from \"react\";\n\n\nfunction AddPlacePopup({ isOpen, onClickClose, onClose, onAddPlace, submitButton }) {\n\n    const [inputTitle, setInputTitle] = useState({value: ''});\n    const [inputLink, setInputLink] = useState({value: ''});\n\n    function handleAddPlaceSubmit(event) {\n        event.preventDefault();\n\n        onAddPlace({\n            name: inputTitle.value,\n            link: inputLink.value\n        })\n        setInputTitle({value: ''});\n        setInputLink({value: ''});\n    }\n\n    const handleInputTitleChange = (event) => {\n        setInputTitle({ value: event.target.value });\n    }\n\n    const handleInputLinkChange = (event) => {\n        setInputLink({ value: event.target.value });\n    }\n\n    return (\n        <PopupWithForm\n            name={\"add\"}\n            buttonTitle={submitButton}\n            formTitle={\"Новое место\"}\n            isOpen={isOpen}\n            onClose={onClose}\n            onClickClose={onClickClose}\n            onSubmit={handleAddPlaceSubmit}\n        >\n\n            <input className=\"form__input form__input_title\" id=\"input-title\"\n                   type=\"text\" name=\"name\" value={inputTitle.value}\n                   onChange={handleInputTitleChange}\n                   placeholder=\"Название\" minLength=\"2\" maxLength=\"30\" required/>\n            <span className=\"form__input-error\" id=\"input-title-error\"></span>\n\n            <input className=\"form__input form__input_link\" id=\"input-link\"\n                   type=\"url\" name=\"link\" value={inputLink.value}\n                   onChange={handleInputLinkChange}\n                   placeholder=\"Ссылка на картинку\" required/>\n            <span className=\"form__input-error\" id=\"input-link-error\"></span>\n\n        </PopupWithForm>\n    )\n}\n\nexport default AddPlacePopup;","import { useState } from 'react';\n\nconst Login = ({ handleLogin }) => {\n    const [login, setLogin] = useState({\n        email: '',\n        password: ''\n    })\n\n    const handleChange = (e) => {\n        const {name, value} = e.target;\n        setLogin({\n            ...login,\n            [name]: value\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // const {email, password} = login;\n        // console.log(email, password);\n        handleLogin(login);\n    }\n\n    return (\n        <form onSubmit={handleSubmit} className=\"authorization\">\n            <h2 className=\"authorization__title\">Вход</h2>\n            <input className=\"authorization__input\" name=\"email\" onChange={handleChange} value={login.email} type=\"email\" placeholder=\"Email\" minLength=\"2\"\n                   required/>\n            <input className=\"authorization__input\" name=\"password\" onChange={handleChange} value={login.password} type=\"password\" placeholder=\"Пароль\"\n                   minLength=\"4\" required/>\n            <button className=\"authorization__button\" type=\"submit\">Войти</button>\n        </form>\n    )\n}\n\nexport default Login;\n","import { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Register = ({ handleRegister }) => {\n    const [registration, setRegistration] = useState({\n        email: '',\n        password: ''\n    })\n\n    const handleChange = (e) => {\n        const {name, value} = e.target;\n        setRegistration({\n            ...registration,\n            [name]: value\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // const {email, password} = registration;\n        // console.log(email, password);\n        handleRegister(registration);\n    }\n\n    return (\n        <form onSubmit={handleSubmit} className=\"authorization\">\n            <h2 className=\"authorization__title\">Регистрация</h2>\n            <input className=\"authorization__input\" onChange={handleChange} value={registration.email} name=\"email\" type=\"email\" placeholder=\"Email\"\n                   minLength=\"2\" required/>\n            <input className=\"authorization__input\" onChange={handleChange} value={registration.password} name=\"password\" type=\"password\" placeholder=\"Пароль\"\n                   minLength=\"4\" required/>\n            <button className=\"authorization__button\" type=\"submit\">Зарегистрироваться</button>\n            <p className=\"authorization__text\">\n                Уже зарегистрированы? <Link to='/sign-in' className=\"authorization__link\">Войти</Link>\n            </p>\n        </form>\n    )\n}\n\nexport default Register;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom'\n\nconst ProtectedRoute = ({component: Component, ...props}) => {\n    return (\n        <Route>\n            {\n                () => props.loggedIn === true ? <Component {...props} /> : <Redirect to='./sign-in' />\n            }\n        </Route>\n    )\n}\n\nexport default ProtectedRoute;","const PageNotFound = () => {\n    return (\n        <p>404 Page Not Found</p>\n    )\n}\n\nexport default PageNotFound;","\nexport const BASE_URL = 'https://api.nastish.nomoredomains.monster';\n\nconst handleResponse = response => response.ok ? response.json() : Promise.reject(`Ошибка: ${response.status}`);\n\nexport const register = (registration) => {\n    const {email, password} = registration;\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\"password\": password, \"email\": email})\n    })\n        .then(handleResponse)\n};\n\nexport const login = (loginInfo) => {\n    const {email, password} = loginInfo;\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\"password\": password, \"email\": email})\n    })\n        .then(handleResponse)\n};\n\nexport const getContent = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n        }\n    })\n        .then(handleResponse)\n}\n","const InfoToolTip = ({ isOpen, isConfirmed, onClickClose, onClose }) => {\n    return (\n        <article className={`popup popup_type_status ${isOpen ? 'popup_opened' : ''}`}\n                 onMouseUp={onClickClose}>\n            <div className=\"popup__window\">\n                <form className=\"form\">\n                    <div className={`popup__picture ${isConfirmed ? 'popup__picture_good' : 'popup__picture_bad'}`}/>\n                    <p className=\"popup__title popup__title_info\">{isConfirmed ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте ещё раз.'}</p>\n                    <button className=\"popup__close\" type=\"button\" onClick={onClose}/>\n                </form>\n            </div>\n\n        </article>\n    )\n}\n\nexport default InfoToolTip;","import {useEffect, useState} from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom'\nimport {api} from '../utils/api';\nimport '../index.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport PageNotFound from \"./PageNotFound\";\nimport * as auth from '../utils/auth';\nimport InfoToolTip from \"./InfoToolTip\";\n\nfunction App() {\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState(null);\n    const [currentUser, setCurrentUser] = useState({});\n    const [cards, setCards] = useState([]);\n    const [popupSubmitSaveButton, setPopupSubmitSaveButton] = useState('Сохранить');\n    const [popupSubmitCreateButton, setPopupSubmitCreateButton] = useState('Создать');\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [userData, setUserData] = useState('');\n    const [infoToolTipData, setInfoToolTipData] = useState({\n        status: false,\n        isOpen: false\n    });\n\n\n    const history = useHistory();\n\n    //Maybe move to MAIN\n    useEffect(() => {\n        tokenCheck();\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\n            .then(answer => {\n                setCurrentUser(answer[0]);\n                setCards(answer[1]);\n            })\n            .catch(error => {\n                showError(error);\n                setCurrentUser({});\n            })\n    }, [])\n\n    function tokenCheck() {\n        const jwt = localStorage.getItem('jwt');\n        if (jwt) {\n            auth.getContent(jwt).then((res) => {\n                if (res) {\n                    setLoggedIn(true);\n                    setUserData(res.data.email);\n                    history.push('/');\n                }\n            })\n                .catch(error => showError(error));\n        }\n    }\n\n    function handleRegister(registration) {\n        // console.log(registration);\n        auth.register(registration)\n            .then(data => {\n                console.log(data);\n                setInfoToolTipData({\n                    status: true,\n                    isOpen: true\n                })\n                history.push('/sign-in');\n            //make popup about registration visible\n                //redirect to /signin\n            })\n            .catch(err => {\n                console.log(err)\n                setInfoToolTipData({\n                    status: false,\n                    isOpen: true\n                })\n            })\n    }\n\n    function handleLogin(login) {\n        auth.login(login)\n            .then(data => {\n                console.log(data);\n                if (data.token) {\n                    localStorage.setItem('jwt', data.token);\n                    setUserData(login.email)\n                    setLoggedIn(true);\n                    history.push('/');\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                setInfoToolTipData({\n                    status: false,\n                    isOpen: true,\n                })\n            })\n    }\n\n\n\n    async function handleCardLike(card) {\n        try {\n            const isLiked = card.likes.forEach((id, iter) => {\n                if (id === currentUser._id) {\n                    return true;\n                }\n                if (iter === card.likes.length - 1) {\n                    return false;\n                }\n            })\n            console.log(isLiked);\n            const newCard = await api.changeLikeCardStatus(card._id, !isLiked);\n            const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n            setCards(newCards);\n        } catch (e) {\n            showError(e);\n        }\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n            .then(data => {\n                const refreshedCards = cards.filter(everyCard => everyCard._id !== card._id);\n                setCards(refreshedCards);\n                console.log(data);\n            })\n            .catch(showError);\n    }\n\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n    }\n\n\n    function closeAllPopups() {\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n\n        setSelectedCard(null);\n        setInfoToolTipData(false);\n    }\n\n\n    const closeViaClick = (e) => {\n        if (e.target.classList.contains(\"popup_opened\")) {\n            closeAllPopups();\n        }\n    }\n\n\n\n    useEffect(() => {\n        const handleEscClose = (e) => {\n            if (e.key === 'Escape') {\n                closeAllPopups();\n            }\n        }\n\n        window.addEventListener(\"keydown\", handleEscClose);\n        return () => {\n            window.removeEventListener(\"keydown\", handleEscClose);\n        }\n    })\n\n    function renderLoading(description) {\n        const { flag, popup } = description;\n        if (popup === 'profile') {\n            flag ? setPopupSubmitSaveButton('Сохранение...') : setPopupSubmitSaveButton('Сохранить');\n        } else {\n            flag ? setPopupSubmitCreateButton('Создание...') : setPopupSubmitCreateButton('Создать');\n        }\n    }\n\n    function showError(error) {\n        console.log('Error: ' + error);\n    }\n\n    function handleUpdateUser(formData) {\n        renderLoading({flag: true, popup: 'profile'});\n        api.editProfileInfo(formData)\n            .then(response => {\n                setCurrentUser(response);\n                closeAllPopups();\n            })\n            .catch(showError)\n            .finally(() => {\n                renderLoading({flag: false, popup: 'profile'});\n            })\n    }\n\n    function handleUpdateAvatar(avatar) {\n        renderLoading({ flag: true, popup: 'avatar'});\n        api.editAvatar(avatar)\n            .then(response => {\n                setCurrentUser(response);\n                closeAllPopups();\n            })\n            .catch(showError)\n            .finally(() => {\n                renderLoading({ flag: false, popup: 'avatar'});\n            })\n    }\n\n    function handleAddPlace(card) {\n        renderLoading({ flag: true, popup: 'addPlace'});\n        console.log(card);\n        api.addCard(card)\n            .then(newCard => {\n                // setCards([card, ...cards]);\n                setCards([newCard, ...cards]);\n                closeAllPopups();\n            })\n            .catch(showError)\n            .finally(() => {\n                renderLoading({ flag: false, popup: 'addPlace' });\n            })\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n\n            <div className=\"container\">\n\n                <div className=\"page\">\n                    {/*шапка с логотипом */}\n                    <Header userData={userData} setLoggedIn={setLoggedIn}/>\n\n                    <Switch>\n                        <ProtectedRoute\n                            exact path=\"/\"\n                            loggedIn={loggedIn}\n                            component={Main}\n                            onEditProfile={handleEditProfileClick}\n                            onAddPlace={handleAddPlaceClick}\n                            onEditAvatar={handleEditAvatarClick}\n                            onCardClick={setSelectedCard}\n                            cards={cards}\n                            onCardLike={handleCardLike}\n                            onCardDelete={handleCardDelete}\n                        />\n                        <Route path=\"/sign-in\">\n                            <Login handleLogin={handleLogin} tokenCheck={tokenCheck}/>\n                        </Route>\n                        <Route path=\"/sign-up\">\n                            <Register handleRegister={handleRegister}/>\n                        </Route>\n                        <ProtectedRoute\n                            path=\"*\"\n                            component={PageNotFound}\n                        />\n                    </Switch>\n\n                    {/*popup добавления новой карточки профиля*/}\n                    <InfoToolTip\n                        isOpen={infoToolTipData.isOpen}\n                        isConfirmed={infoToolTipData.status}\n                        onClose={closeAllPopups}\n                        onClickClose={closeViaClick}\n                    />\n\n                    <AddPlacePopup\n                        isOpen={isAddPlacePopupOpen}\n                        onClose={closeAllPopups}\n                        onClickClose={closeViaClick}\n                        onAddPlace={handleAddPlace}\n                        submitButton={popupSubmitCreateButton}\n                    />\n\n                    {/*popup редактирования профиля*/}\n\n                    <EditProfilePopup\n                        isOpen={isEditProfilePopupOpen}\n                        onClose={closeAllPopups}\n                        onClickClose={closeViaClick}\n                        onUpdateUser={handleUpdateUser}\n                        submitButton={popupSubmitSaveButton}\n                    />\n\n                    {/*popup добавления нового аватара*/}\n\n                    <EditAvatarPopup\n                        isOpen={isEditAvatarPopupOpen}\n                        onClickClose={closeViaClick}\n                        onClose={closeAllPopups}\n                        onUpdateAvatar={handleUpdateAvatar}\n                        submitButton={popupSubmitCreateButton}\n                    />\n\n                    {/*popup для увеличения фото*/}\n\n                    <ImagePopup\n                        card={selectedCard}\n                        onClose={closeAllPopups}\n                        onClickClose={closeViaClick}\n                    />\n\n                    {/*popup для подтверждения удаления карточки*/}\n                    {/*TODO: check after card realisation*/}\n                    <PopupWithForm\n                        name={\"delete\"}\n                        buttonTitle={\"Да\"}\n                        formTitle={\"Вы уверены?\"}\n                        isOpen={false}\n                    />\n\n                    {/*футер */}\n                    <Footer/>\n                </div>\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { BrowserRouter } from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals';\nimport {CurrentUserContext} from \"./contexts/CurrentUserContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n    {/*<App />*/}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}